{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledEngine = require(\"@mui/styled-engine\");\n\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\n\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\n\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\n\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\n\nvar _createGetCssVar = _interopRequireDefault(require(\"./createGetCssVar\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"colorSchemes\", \"components\"];\n\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\n\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache(nodeInterop);\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nconst DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexports.DISABLE_CSS_TRANSITION = DISABLE_CSS_TRANSITION;\n\nfunction createCssVarsProvider(options) {\n  const {\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: desisgnSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    enableColorScheme: designSystemEnableColorScheme = true,\n    prefix: designSystemPrefix = '',\n    shouldSkipGeneratingVar,\n    resolveTheme\n  } = options;\n\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\n    }\n\n    return value;\n  };\n\n  function CssVarsProvider(_ref) {\n    let {\n      children,\n      theme: themeProp = defaultTheme,\n      prefix = designSystemPrefix,\n      modeStorageKey = defaultModeStorageKey,\n      colorSchemeStorageKey = defaultColorSchemeStorageKey,\n      attribute = defaultAttribute,\n      defaultMode = desisgnSystemMode,\n      defaultColorScheme = designSystemColorScheme,\n      disableTransitionOnChange = designSystemTransitionOnChange,\n      enableColorScheme = designSystemEnableColorScheme,\n      storageWindow = typeof window === 'undefined' ? undefined : window,\n      documentNode = typeof document === 'undefined' ? undefined : document,\n      colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n      colorSchemeSelector = ':root'\n    } = _ref;\n    const hasMounted = React.useRef(false);\n    const {\n      colorSchemes = {},\n      components = {}\n    } = themeProp,\n          restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(themeProp, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const {\n      mode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n\n    const resolvedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (defaultMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'auto'\n\n\n        return defaultLightColorScheme;\n      }\n\n      return colorScheme;\n    })();\n\n    let theme = restThemeProp;\n    const {\n      css: rootCss,\n      vars: rootVars,\n      parsedTheme\n    } = (0, _cssVarsParser.default)(theme, {\n      prefix,\n      basePrefix: designSystemPrefix,\n      shouldSkipGeneratingVar\n    });\n    theme = (0, _extends2.default)({}, parsedTheme, {\n      components,\n      colorSchemes,\n      prefix,\n      vars: rootVars,\n      getCssVar: (0, _createGetCssVar.default)(prefix),\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    });\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(_ref2 => {\n      let [key, scheme] = _ref2;\n      const {\n        css,\n        vars,\n        parsedTheme: parsedScheme\n      } = (0, _cssVarsParser.default)(scheme, {\n        prefix,\n        basePrefix: designSystemPrefix,\n        shouldSkipGeneratingVar\n      });\n      theme.vars = (0, _utils.deepmerge)(theme.vars, vars);\n\n      if (key === resolvedColorScheme) {\n        theme = (0, _extends2.default)({}, theme, parsedScheme);\n\n        if (theme.palette) {\n          // assign runtime mode & colorScheme\n          theme.palette.mode = mode;\n          theme.palette.colorScheme = resolvedColorScheme;\n        }\n      }\n\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n\n        return defaultColorScheme.light;\n      })();\n\n      if (key === resolvedDefaultColorScheme) {\n        defaultColorSchemeStyleSheet[colorSchemeSelector] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n    (0, _utils.unstable_useEnhancedEffect)(() => {\n      if (!mode || !enableColorScheme || !colorSchemeNode) {\n        return undefined;\n      }\n\n      const priorColorScheme = colorSchemeNode.style.getPropertyValue('color-scheme'); // `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\n\n      if (mode === 'system') {\n        colorSchemeNode.style.setProperty('color-scheme', systemMode);\n      } else {\n        colorSchemeNode.style.setProperty('color-scheme', mode);\n      }\n\n      return () => {\n        colorSchemeNode.style.setProperty('color-scheme', priorColorScheme);\n      };\n    }, [mode, systemMode, enableColorScheme, colorSchemeNode]);\n    React.useEffect(() => {\n      let timer;\n\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css); // Force browser repaint\n\n        (() => window.getComputedStyle(documentNode.body))();\n\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(ColorSchemeContext.Provider, {\n      value: {\n        mode,\n        setMode,\n        lightColorScheme,\n        darkColorScheme,\n        colorScheme,\n        setColorScheme,\n        allColorSchemes\n      },\n      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: {\n          [colorSchemeSelector]: rootCss\n        }\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: defaultColorSchemeStyleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: otherColorSchemesStyleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: _propTypes.default.any,\n\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: _propTypes.default.string,\n\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: _propTypes.default.string,\n\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n\n    /**\n     * Disable CSS transitions when switching between modes or color schemes\n     */\n    disableTransitionOnChange: _propTypes.default.bool,\n\n    /**\n     * The document to attach the attribute to\n     */\n    documentNode: _propTypes.default.any,\n\n    /**\n     * Indicate to the browser which color scheme is used (light or dark) for rendering built-in UI\n     */\n    enableColorScheme: _propTypes.default.bool,\n\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n\n    /**\n     * CSS variable prefix.\n     */\n    prefix: _propTypes.default.string,\n\n    /**\n     * The window that attaches the 'storage' event listener\n     * @default window\n     */\n    storageWindow: _propTypes.default.any,\n\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n\n  const getInitColorSchemeScript = params => (0, _getInitColorSchemeScript.default)((0, _extends2.default)({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    modeStorageKey: defaultModeStorageKey,\n    enableColorScheme: designSystemEnableColorScheme\n  }, params));\n\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","DISABLE_CSS_TRANSITION","default","createCssVarsProvider","_extends2","_objectWithoutPropertiesLoose2","_utils","React","_interopRequireWildcard","_propTypes","_styledEngine","_cssVarsParser","_ThemeProvider","_getInitColorSchemeScript","_useCurrentColorScheme","_createGetCssVar","_jsxRuntime","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","options","theme","defaultTheme","attribute","defaultAttribute","DEFAULT_ATTRIBUTE","modeStorageKey","defaultModeStorageKey","DEFAULT_MODE_STORAGE_KEY","colorSchemeStorageKey","defaultColorSchemeStorageKey","DEFAULT_COLOR_SCHEME_STORAGE_KEY","defaultMode","desisgnSystemMode","defaultColorScheme","designSystemColorScheme","disableTransitionOnChange","designSystemTransitionOnChange","enableColorScheme","designSystemEnableColorScheme","prefix","designSystemPrefix","shouldSkipGeneratingVar","resolveTheme","colorSchemes","light","dark","console","error","ColorSchemeContext","createContext","undefined","useColorScheme","useContext","Error","process","env","NODE_ENV","formatMuiErrorMessage","CssVarsProvider","children","themeProp","storageWindow","window","documentNode","document","colorSchemeNode","documentElement","colorSchemeSelector","hasMounted","useRef","components","restThemeProp","allColorSchemes","keys","defaultLightColorScheme","defaultDarkColorScheme","mode","setMode","systemMode","lightColorScheme","darkColorScheme","colorScheme","setColorScheme","supportedColorSchemes","resolvedColorScheme","css","rootCss","vars","rootVars","parsedTheme","basePrefix","getCssVar","getColorSchemeSelector","targetColorScheme","defaultColorSchemeStyleSheet","otherColorSchemesStyleSheet","entries","forEach","scheme","parsedScheme","deepmerge","palette","resolvedDefaultColorScheme","useEffect","setAttribute","unstable_useEnhancedEffect","priorColorScheme","style","getPropertyValue","setProperty","timer","current","createElement","appendChild","createTextNode","head","getComputedStyle","body","setTimeout","removeChild","clearTimeout","jsxs","Provider","jsx","GlobalStyles","styles","propTypes","string","node","any","oneOfType","object","bool","getInitColorSchemeScript","params"],"sources":["/data/data/com.termux/files/home/weatherApp/node_modules/@mui/system/cssVars/createCssVarsProvider.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DISABLE_CSS_TRANSITION = void 0;\nexports.default = createCssVarsProvider;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _utils = require(\"@mui/utils\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _styledEngine = require(\"@mui/styled-engine\");\n\nvar _cssVarsParser = _interopRequireDefault(require(\"./cssVarsParser\"));\n\nvar _ThemeProvider = _interopRequireDefault(require(\"../ThemeProvider\"));\n\nvar _getInitColorSchemeScript = _interopRequireWildcard(require(\"./getInitColorSchemeScript\"));\n\nvar _useCurrentColorScheme = _interopRequireDefault(require(\"./useCurrentColorScheme\"));\n\nvar _createGetCssVar = _interopRequireDefault(require(\"./createGetCssVar\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nconst _excluded = [\"colorSchemes\", \"components\"];\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst DISABLE_CSS_TRANSITION = '*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}';\nexports.DISABLE_CSS_TRANSITION = DISABLE_CSS_TRANSITION;\n\nfunction createCssVarsProvider(options) {\n  const {\n    theme: defaultTheme = {},\n    attribute: defaultAttribute = _getInitColorSchemeScript.DEFAULT_ATTRIBUTE,\n    modeStorageKey: defaultModeStorageKey = _getInitColorSchemeScript.DEFAULT_MODE_STORAGE_KEY,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey = _getInitColorSchemeScript.DEFAULT_COLOR_SCHEME_STORAGE_KEY,\n    defaultMode: desisgnSystemMode = 'light',\n    defaultColorScheme: designSystemColorScheme,\n    disableTransitionOnChange: designSystemTransitionOnChange = false,\n    enableColorScheme: designSystemEnableColorScheme = true,\n    prefix: designSystemPrefix = '',\n    shouldSkipGeneratingVar,\n    resolveTheme\n  } = options;\n\n  if (!defaultTheme.colorSchemes || typeof designSystemColorScheme === 'string' && !defaultTheme.colorSchemes[designSystemColorScheme] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.light] || typeof designSystemColorScheme === 'object' && !defaultTheme.colorSchemes[designSystemColorScheme == null ? void 0 : designSystemColorScheme.dark]) {\n    console.error(`MUI: \\`${designSystemColorScheme}\\` does not exist in \\`theme.colorSchemes\\`.`);\n  }\n\n  const ColorSchemeContext = /*#__PURE__*/React.createContext(undefined);\n\n  const useColorScheme = () => {\n    const value = React.useContext(ColorSchemeContext);\n\n    if (!value) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: \\`useColorScheme\\` must be called under <CssVarsProvider />` : (0, _utils.formatMuiErrorMessage)(19));\n    }\n\n    return value;\n  };\n\n  function CssVarsProvider({\n    children,\n    theme: themeProp = defaultTheme,\n    prefix = designSystemPrefix,\n    modeStorageKey = defaultModeStorageKey,\n    colorSchemeStorageKey = defaultColorSchemeStorageKey,\n    attribute = defaultAttribute,\n    defaultMode = desisgnSystemMode,\n    defaultColorScheme = designSystemColorScheme,\n    disableTransitionOnChange = designSystemTransitionOnChange,\n    enableColorScheme = designSystemEnableColorScheme,\n    storageWindow = typeof window === 'undefined' ? undefined : window,\n    documentNode = typeof document === 'undefined' ? undefined : document,\n    colorSchemeNode = typeof document === 'undefined' ? undefined : document.documentElement,\n    colorSchemeSelector = ':root'\n  }) {\n    const hasMounted = React.useRef(false);\n    const {\n      colorSchemes = {},\n      components = {}\n    } = themeProp,\n          restThemeProp = (0, _objectWithoutPropertiesLoose2.default)(themeProp, _excluded);\n    const allColorSchemes = Object.keys(colorSchemes);\n    const defaultLightColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.light;\n    const defaultDarkColorScheme = typeof defaultColorScheme === 'string' ? defaultColorScheme : defaultColorScheme.dark;\n    const {\n      mode,\n      setMode,\n      systemMode,\n      lightColorScheme,\n      darkColorScheme,\n      colorScheme,\n      setColorScheme\n    } = (0, _useCurrentColorScheme.default)({\n      supportedColorSchemes: allColorSchemes,\n      defaultLightColorScheme,\n      defaultDarkColorScheme,\n      modeStorageKey,\n      colorSchemeStorageKey,\n      defaultMode,\n      storageWindow\n    });\n\n    const resolvedColorScheme = (() => {\n      if (!colorScheme) {\n        // This scope occurs on the server\n        if (defaultMode === 'dark') {\n          return defaultDarkColorScheme;\n        } // use light color scheme, if default mode is 'light' | 'auto'\n\n\n        return defaultLightColorScheme;\n      }\n\n      return colorScheme;\n    })();\n\n    let theme = restThemeProp;\n    const {\n      css: rootCss,\n      vars: rootVars,\n      parsedTheme\n    } = (0, _cssVarsParser.default)(theme, {\n      prefix,\n      basePrefix: designSystemPrefix,\n      shouldSkipGeneratingVar\n    });\n    theme = (0, _extends2.default)({}, parsedTheme, {\n      components,\n      colorSchemes,\n      prefix,\n      vars: rootVars,\n      getCssVar: (0, _createGetCssVar.default)(prefix),\n      getColorSchemeSelector: targetColorScheme => `[${attribute}=\"${targetColorScheme}\"] &`\n    });\n    const defaultColorSchemeStyleSheet = {};\n    const otherColorSchemesStyleSheet = {};\n    Object.entries(colorSchemes).forEach(([key, scheme]) => {\n      const {\n        css,\n        vars,\n        parsedTheme: parsedScheme\n      } = (0, _cssVarsParser.default)(scheme, {\n        prefix,\n        basePrefix: designSystemPrefix,\n        shouldSkipGeneratingVar\n      });\n      theme.vars = (0, _utils.deepmerge)(theme.vars, vars);\n\n      if (key === resolvedColorScheme) {\n        theme = (0, _extends2.default)({}, theme, parsedScheme);\n\n        if (theme.palette) {\n          // assign runtime mode & colorScheme\n          theme.palette.mode = mode;\n          theme.palette.colorScheme = resolvedColorScheme;\n        }\n      }\n\n      const resolvedDefaultColorScheme = (() => {\n        if (typeof defaultColorScheme === 'string') {\n          return defaultColorScheme;\n        }\n\n        if (defaultMode === 'dark') {\n          return defaultColorScheme.dark;\n        }\n\n        return defaultColorScheme.light;\n      })();\n\n      if (key === resolvedDefaultColorScheme) {\n        defaultColorSchemeStyleSheet[colorSchemeSelector] = css;\n      } else {\n        otherColorSchemesStyleSheet[`${colorSchemeSelector === ':root' ? '' : colorSchemeSelector}[${attribute}=\"${key}\"]`] = css;\n      }\n    });\n    React.useEffect(() => {\n      if (colorScheme && colorSchemeNode) {\n        // attaches attribute to <html> because the css variables are attached to :root (html)\n        colorSchemeNode.setAttribute(attribute, colorScheme);\n      }\n    }, [colorScheme, attribute, colorSchemeNode]);\n    (0, _utils.unstable_useEnhancedEffect)(() => {\n      if (!mode || !enableColorScheme || !colorSchemeNode) {\n        return undefined;\n      }\n\n      const priorColorScheme = colorSchemeNode.style.getPropertyValue('color-scheme'); // `color-scheme` tells browser to render built-in elements according to its value: `light` or `dark`\n\n      if (mode === 'system') {\n        colorSchemeNode.style.setProperty('color-scheme', systemMode);\n      } else {\n        colorSchemeNode.style.setProperty('color-scheme', mode);\n      }\n\n      return () => {\n        colorSchemeNode.style.setProperty('color-scheme', priorColorScheme);\n      };\n    }, [mode, systemMode, enableColorScheme, colorSchemeNode]);\n    React.useEffect(() => {\n      let timer;\n\n      if (disableTransitionOnChange && hasMounted.current && documentNode) {\n        // credit: https://github.com/pacocoursey/next-themes/blob/b5c2bad50de2d61ad7b52a9c5cdc801a78507d7a/index.tsx#L313\n        const css = documentNode.createElement('style');\n        css.appendChild(documentNode.createTextNode(DISABLE_CSS_TRANSITION));\n        documentNode.head.appendChild(css); // Force browser repaint\n\n        (() => window.getComputedStyle(documentNode.body))();\n\n        timer = setTimeout(() => {\n          documentNode.head.removeChild(css);\n        }, 1);\n      }\n\n      return () => {\n        clearTimeout(timer);\n      };\n    }, [colorScheme, disableTransitionOnChange, documentNode]);\n    React.useEffect(() => {\n      hasMounted.current = true;\n      return () => {\n        hasMounted.current = false;\n      };\n    }, []);\n    return /*#__PURE__*/(0, _jsxRuntime.jsxs)(ColorSchemeContext.Provider, {\n      value: {\n        mode,\n        setMode,\n        lightColorScheme,\n        darkColorScheme,\n        colorScheme,\n        setColorScheme,\n        allColorSchemes\n      },\n      children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: {\n          [colorSchemeSelector]: rootCss\n        }\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: defaultColorSchemeStyleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_styledEngine.GlobalStyles, {\n        styles: otherColorSchemesStyleSheet\n      }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_ThemeProvider.default, {\n        theme: resolveTheme ? resolveTheme(theme) : theme,\n        children: children\n      })]\n    });\n  }\n\n  process.env.NODE_ENV !== \"production\" ? CssVarsProvider.propTypes = {\n    /**\n     * The body attribute name to attach colorScheme.\n     */\n    attribute: _propTypes.default.string,\n\n    /**\n     * The component tree.\n     */\n    children: _propTypes.default.node,\n\n    /**\n     * The node used to attach the color-scheme attribute\n     */\n    colorSchemeNode: _propTypes.default.any,\n\n    /**\n     * The CSS selector for attaching the generated custom properties\n     */\n    colorSchemeSelector: _propTypes.default.string,\n\n    /**\n     * localStorage key used to store `colorScheme`\n     */\n    colorSchemeStorageKey: _propTypes.default.string,\n\n    /**\n     * The initial color scheme used.\n     */\n    defaultColorScheme: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n\n    /**\n     * The initial mode used.\n     */\n    defaultMode: _propTypes.default.string,\n\n    /**\n     * Disable CSS transitions when switching between modes or color schemes\n     */\n    disableTransitionOnChange: _propTypes.default.bool,\n\n    /**\n     * The document to attach the attribute to\n     */\n    documentNode: _propTypes.default.any,\n\n    /**\n     * Indicate to the browser which color scheme is used (light or dark) for rendering built-in UI\n     */\n    enableColorScheme: _propTypes.default.bool,\n\n    /**\n     * The key in the local storage used to store current color scheme.\n     */\n    modeStorageKey: _propTypes.default.string,\n\n    /**\n     * CSS variable prefix.\n     */\n    prefix: _propTypes.default.string,\n\n    /**\n     * The window that attaches the 'storage' event listener\n     * @default window\n     */\n    storageWindow: _propTypes.default.any,\n\n    /**\n     * The calculated theme object that will be passed through context.\n     */\n    theme: _propTypes.default.object\n  } : void 0;\n\n  const getInitColorSchemeScript = params => (0, _getInitColorSchemeScript.default)((0, _extends2.default)({\n    attribute: defaultAttribute,\n    colorSchemeStorageKey: defaultColorSchemeStorageKey,\n    modeStorageKey: defaultModeStorageKey,\n    enableColorScheme: designSystemEnableColorScheme\n  }, params));\n\n  return {\n    CssVarsProvider,\n    useColorScheme,\n    getInitColorSchemeScript\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}